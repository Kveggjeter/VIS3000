source("src/InitialCleaningController.R")
getwd()
setwd(dir)
getwd()
setwd(dir)
setwd(utils::getSrcDirectory(function(){}))
getwd()
this.dir <- dirname(parent.frame(2)$ofile)
setwd("../../")
getwd()
getwd()
source("src/InitialCleaningController.R")
main <- function(){
initialCleaningController()
}
main()
# Author: 7036
# Here you can take full use of the functions we've made. You will find them all under src/modifiers. If you are doing any writes from the script, make
# sure to always do 'setwd("data/processed")' and close the action with 'setwd("../../)'. Else the application will fail and you will have to set
# wd again. Remember to always work from the Main package and always return after going somewhere else.
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
}
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
# Run this for importing each component!
modifierController()
# Run this for importing each component!
modifierController()
# Author: 7036
# Here you can take full use of the functions we've made. You will find them all under src/modifiers. If you are doing any writes from the script, make
# sure to always do 'setwd("data/processed")' and close the action with 'setwd("../../)'. Else the application will fail and you will have to set
# wd again. Remember to always work from the Main package and always return after going somewhere else.
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
}
# Run this for importing each component!
modifierController()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
# Run this for importing each component!
modifierController()
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
source("src/modifiers/MergeFrames.R")
mergeFrames(mainDf, secondDf)
getwd()
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
correlationData(mainDf, secondDf)
# Use this on a df in Tableau if you get weird values.
mirrorRowsAndColls(mainDf)
# here are some visualizations! (IndustryCorrTool.R)
industryFilteredCorr(region = east_southeast_asia, title = "East and Southeast Asia", method = "spearman")
filteredCorrMatrix(region = north_america, method = "spearman")
install.packages(ggcorrplot)
install.packages("ggcorrplot")
install.packages("Hmisc")
install.packages("ggcorrplot")
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
correlationData(mainDf, secondDf)
install.packages("dplyr")
getwd()
source("src/InitialCleaningController.R")
source("src/ModifierController")
getwd()
source("src/InitialCleaningController.R")
source("src/ModifierController.R")
getwd()
source("src/InitialCleaningController.R")
main <- function(){
initialCleaningController()
}
main()
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
source("src/modifiers/IndustryCorrTool.R")
source("src/modifiers/CorrelationData.R")
}
# Run this for importing each component!
modifierController()
getwd()
# For simple correlation matrix. Use a data set that is compatible with
# s6a (column as countries and from 2018).
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/industry_value_added.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
correlationData(mainDf, secondDf)
# Use this on a df in Tableau if you get weird values.
mirrorRowsAndColls(mainDf)
# Here are some visualizations! (IndustryCorrTool.R) It uses
# ggCorrplot, ggplot2 and Hmisc. Download here if you don't have them locally. If
# you do, jump over these lines.
install.packages("ggcorrplot")
install.packages("Hmisc")
install.packeges("ggplot2")
install.packages("ggplot2")
industryFilteredCorr(region = east_southeast_asia, title = "East and Southeast Asia", method = "spearman")
filteredCorrMatrix(region = north_america, method = "spearman")
