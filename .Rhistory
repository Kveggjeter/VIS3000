setwd("data")
q()
# Author: Eirik
# This is the script for cleaning the main data we got. There is some dis
getwd()
setwd("data")
setwd(dir)
getwd()
setwd("vis3000/VIS3000")
getwd()
df <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
View(df)
df <- read.csv("data/raw/alzheimers_prediction_dataset.csv", row.names = 1)
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv", row.names = 1)
View(df)
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv", row.names = 1)
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
View(df)
{
library(dplyr)
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
View(df)
df <- df %>%
count(country, name = "CountOfCountry")
View(df)
}
{
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
View(df)
df <- df %>%
count(Country, name = "CountOfCountry")
View(df)
}
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
View(df)
df$Alzheimer.s.Diagnosis <- ifelse(df$Alzheimer.s.Diagnosis == "yes", 1, 0)
View(df)
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
df$Alzheimer.s.Diagnosis <- ifelse(df$Alzheimer.s.Diagnosis == "Yes", 1, 0)
View(df)
{
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
df$Alzheimer.s.Diagnosis <- ifelse(df$Alzheimer.s.Diagnosis == "Yes", 1, 0)
df <- df %>%
count(Country, name = "Count_Of_Country")
df <- df %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = TRUE)
)
View(df)
}
{
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
df$Alzheimer.s.Diagnosis <- ifelse(df$Alzheimer.s.Diagnosis == "Yes", 1, 0)
df <- df %>%
count(Country, name = "Count_Of_Country")
df <- df %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = FALSE)
)
View(df)
}
rlang::last_trace()
{
df <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
df$Alzheimer.s.Diagnosis <- ifelse(df$Alzheimer.s.Diagnosis == "Yes", 1, 0)
newDf <- df %>%
count(Country, name = "Count_Of_Country")
newDf <- df %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = FALSE)
)
View(newDf)
}
library(dplyr)
{
alzheimerDf <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
alzheimerDf$Alzheimer.s.Diagnosis <- ifelse(alzheimerDf$Alzheimer.s.Diagnosis == "Yes", 1, 0)
selectionFromAlzheimerDf <- alzheimerDf %>%
count(Country, name = "Count_Of_Country")
selectionFromAlzheimerDf <- alzheimerDf %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = TRUE)
)
View(selectionFromAlzheimerDf)
}
library(dplyr)
alzheimerDf <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
alzheimerDf$Alzheimer.s.Diagnosis <-
ifelse(alzheimerDf$Alzheimer.s.Diagnosis == "Yes", 1, 0)
library(dplyr)
alzheimerDf <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
alzheimerDf$Alzheimer.s.Diagnosis <-
ifelse(alzheimerDf$Alzheimer.s.Diagnosis == "Yes", 1, 0)
selectionFromAlzheimerDf <- alzheimerDf %>%
count(Country, name = "Count_Of_Country")
selectionFromAlzheimerDf <- alzheimerDf %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = TRUE)
)
selectionFromAlzheimerDf <- as.data.frame(t(selectionFromAlzheimerDf))
View(selectionFromAlzheimerDf)
library(dplyr)
alzheimerDf <- read.csv("data/raw/support/alzheimers_prediction_dataset.csv")
alzheimerDf$Alzheimer.s.Diagnosis <-
ifelse(alzheimerDf$Alzheimer.s.Diagnosis == "Yes", 1, 0)
selectionFromAlzheimerDf <- alzheimerDf %>%
count(Country, name = "Count_Of_Country")
selectionFromAlzheimerDf <- alzheimerDf %>%
group_by(Country) %>%
summarise(
Count_Of_Country = n(),
Alzheimer.s.Diagnosis = mean(Alzheimer.s.Diagnosis, na.rm = TRUE)
)
View(selectionFromAlzheimerDf)
selectionFromAlzheimerDf <- subset(selectionFromAlzheimerDf, select=c(Country, Alzheimer.s.Diagnosis))
View(selectionFromAlzheimerDf)
selectionFromAlzheimerDf <- as.data.frame(t(selectionFromAlzheimerDf))
View(selectionFromAlzheimerDf)
colnames(selectionFromAlzheimerDf) <- selectionFromAlzheimerDf[1, ]
selectionFromAlzheimerDf <- selectionFromAlzheimerDf[-1, ]
View(selectionFromAlzheimerDf)
setwd("data/processed")
write.csv(selectionFromAlzheimerDf,
paste0("alzheimer_clean.csv"),
row.names = TRUE)
setwd("../../")
# Here you can take full use of the functions we've made. You will find them all under src/modifiers. If you are doing any writes from the script, make
# sure to always do 'setwd("data/processed")' and close the action with 'setwd("../../)'. Else the application will fail and you will have to set
# wd again. Remember to always work from the Main package and always return after going somewhere else.
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
}
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
mergeFrames(mainDf, secondDf)
getwd()
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
{
setwd("data/processed")
write.csv(selectionFromAlzheimerDf,
paste0("mainDf_with_alzheimer.csv"),
row.names = TRUE)
setwd("../../")
}
correlationData(mainDf, secondDf)
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
mergeFrames(mainDf, secondDf)
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf -> mergeFrames(mainDf, secondDf)
newDf -> as.data.frame(mergeFrames(mainDf, secondDf))
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf -> mergeFrames(mainDf, secondDf)
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf -> mergeFrames(mainDf, secondDf)
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf -> mergeFrames(mainDf, secondDf)
{
setwd("data/processed")
write.csv(newDf,
paste0("mainDf_with_alzheimer.csv"),
row.names = TRUE)
setwd("../../")
}
newDf -> mergeFrames(mainDf, secondDf)
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf <- mergeFrames(mainDf, secondDf)
{
setwd("data/processed")
write.csv(newDf,
paste0("mainDf_with_alzheimer.csv"),
row.names = TRUE)
setwd("../../")
}
correlationData(mainDf, secondDf)
# Use this on a df in Tableau if you get weird values.
mirrorRowsAndColls(newDf)
View(newDf)
# Use this on a df in Tableau if you get weird values.
mirrorRowsAndColls(newDf)
View(newDf)
source("src/modifiers/MirrorRowsAndColls.R")
# Use this on a df in Tableau if you get weird values.
newDf <- mirrorRowsAndColls(newDf)
View(newDf)
{
setwd("data/processed")
write.csv(newDf,
paste0("mainDf_with_alzheimer.csv"),
row.names = TRUE)
setwd("../../")
}
source("src/InitialCleaningController.R")
main <- function(){
initial_cleaning_controller()
}
main()
getwd()
source("src/InitialCleaningController.R")
main <- function(){
initialCleaningController()
}
getwd()
main()
# Here you can take full use of the functions we've made. You will find them all under src/modifiers. If you are doing any writes from the script, make
# sure to always do 'setwd("data/processed")' and close the action with 'setwd("../../)'. Else the application will fail and you will have to set
# wd again. Remember to always work from the Main package and always return after going somewhere else.
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
}
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf <- mergeFrames(mainDf, secondDf)
getwd()
newDf <- mergeFrames(mainDf, secondDf)
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
# Here you can take full use of the functions we've made. You will find them all under src/modifiers. If you are doing any writes from the script, make
# sure to always do 'setwd("data/processed")' and close the action with 'setwd("../../)'. Else the application will fail and you will have to set
# wd again. Remember to always work from the Main package and always return after going somewhere else.
modifierController <- function() {
source("src/modifiers/cleaningTwoSets.R")
source("src/modifiers/CorrelationData.R")
source("src/modifiers/MergeFrames.R")
source("src/modifiers/MirrorRowsAndColls.R")
}
getwd()
mainDf <- read.csv("data/processed/Figure.s6a_2018.csv", , row.names = 1)
secondDf <- read.csv("data/processed/alzheimer_clean.csv", , row.names = 1)
newDf <- mergeFrames(mainDf, secondDf)
correlationData(mainDf, secondDf)
