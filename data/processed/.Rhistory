as <- contDf(unDf, mpDf, asia)
asUn <- as$newUn
asMp <- as$newMp
asCor = cor(asUn, asMp, method = "spearman")
}
# Europe
{
eu <- contDf(unDf, mpDf, europe)
euUn <- eu$newUn
euMp <- eu$newMp
euCor = cor(euUn, euMp, method = "spearman")
}
# North America
{
us <- contDf(unDf, mpDf, north_america)
usUn <- us$newUn
usMp <- us$newMp
usCor = cor(usUn, usMp, method = "spearman")
}
# South America
{
sa <- contDf(unDf, mpDf, south_america)
saUn <- sa$newUn
saMp <- sa$newMp
saCor = cor(saUn, saMp, method = "spearman")
}
saCor <- correl(0.7, saCor)
usCor <- correl(0.7, usCor)
euCor <- correl(0.7, euCor)
asCor <- correl(0.7, asCor)
afCor <- correl(0.7, afCor)
View(saCor)
View(usCor)
View(euCor)
View(asCor)
View(afCor)
}
# Author: Eirik
# Script for checking the correlation between data
# Testing different data
{
#setwd(file.path("VIS3000","data"))
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
source("../CleaningTwoSets.R")
source("../ContinentVector.R")
un <- read.csv("industry_value_added.csv", row.names = 1)
mp <- read.csv("Figure.S6a_2018.csv", row.names = 1)
data <- eqClean(mp, un)
unDf <- data$unDf
mpDf <- data$mpDf
# Seperating countries by continent in seperate df
continent <- function(df1, df2, place) {
unCols <- colnames(df1)[colnames(df1) %in% place]
df1 <- df1[, unCols, drop = FALSE]
mpCols <- colnames(df2)[colnames(df2) %in% place]
df2 <- df2[, mpCols, drop = FALSE]
return(list(df1 = df1, df2 = df2))
}
# Making a df based on continent queried. Has some print statements
# in case the rows differs (it says ncol, but we're reversing the order later on)
contDf <- function(unDf, mpDf, place) {
temp <- continent(unDf, mpDf, place)
newUn <- temp$df1
newMp <- temp$df2
print(ncol(newUn))
print(ncol(newMp))
newUn <- as.data.frame(t(newUn))
newMp <- as.data.frame(t(newMp))
return(list(newUn = newUn, newMp = newMp))
}
# Setting up the correlation. Deciding what correlation value we want (cl) and the dataset (df)
correl <- function(cl, df) {
df[abs(df) < cl] <- NA
df[df == 1] <- NA
df <- df[rowSums(!is.na(df)) > 0, colSums(!is.na(df)) > 0]
return(df)
}
# Africa
{
af <- contDf(unDf, mpDf, africa)
afUn <- af$newUn
afMp <- af$newMp
afCor = cor(afUn, afMp, method = "spearman")
}
# Asia
{
as <- contDf(unDf, mpDf, asia)
asUn <- as$newUn
asMp <- as$newMp
asCor = cor(asUn, asMp, method = "spearman")
}
# Europe
{
eu <- contDf(unDf, mpDf, europe)
euUn <- eu$newUn
euMp <- eu$newMp
euCor = cor(euUn, euMp, method = "spearman")
}
# North America
{
us <- contDf(unDf, mpDf, north_america)
usUn <- us$newUn
usMp <- us$newMp
usCor = cor(usUn, usMp, method = "spearman")
}
# South America
{
sa <- contDf(unDf, mpDf, south_america)
saUn <- sa$newUn
saMp <- sa$newMp
saCor = cor(saUn, saMp, method = "spearman")
}
saCor <- correl(0.7, saCor)
usCor <- correl(0.7, usCor)
euCor <- correl(0.7, euCor)
asCor <- correl(0.7, asCor)
afCor <- correl(0.7, afCor)
View(saCor)
View(usCor)
View(euCor)
View(asCor)
View(afCor)
}
# Purely for checking if there are similar result from the different dataframes. Not to really be used in the final
# report. It didnt give much at all, but keeping it here for testing purposes. You never know, might find something interesting
# with other data.
{
contCors <- list(
Africa = afCor,
Asia = asCor,
Europe = euCor,
NorthAmerica = usCor,
SouthAmerica = saCor
)
all_pairs <- lapply(names(contCors), function(cont) {
melt(contCors[[cont]]) %>%
filter(abs(value) >= 0.7) %>%
mutate(Continent = cont)
}) %>% bind_rows() %>%
rename(UN = Var1, MP = Var2, Correlation = value)
aggregated <- all_pairs %>%
group_by(UN, MP) %>%
summarise(
Avg_Correlation = mean(Correlation),
Continents = n()
) %>%
arrange(desc(Continents), desc(Avg_Correlation))
View(aggregated)
}
rlang::last_trace()
View(industryDf)
# Author: Eirik
# Script for checking the correlation between data
# Testing different data
{
#setwd(file.path("VIS3000","data"))
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
source("../CleaningTwoSets.R")
source("../ContinentVector.R")
un <- read.csv("industry_value_added.csv", row.names = 1)
mp <- read.csv("Figure.S6a_2018.csv", row.names = 1)
data <- eqClean(mp, un)
unDf <- data$unDf
mpDf <- data$mpDf
# Seperating countries by continent in seperate df
continent <- function(df1, df2, place) {
unCols <- colnames(df1)[colnames(df1) %in% place]
df1 <- df1[, unCols, drop = FALSE]
mpCols <- colnames(df2)[colnames(df2) %in% place]
df2 <- df2[, mpCols, drop = FALSE]
return(list(df1 = df1, df2 = df2))
}
# Making a df based on continent queried. Has some print statements
# in case the rows differs (it says ncol, but we're reversing the order later on)
contDf <- function(unDf, mpDf, place) {
temp <- continent(unDf, mpDf, place)
newUn <- temp$df1
newMp <- temp$df2
print(ncol(newUn))
print(ncol(newMp))
newUn <- as.data.frame(t(newUn))
newMp <- as.data.frame(t(newMp))
return(list(newUn = newUn, newMp = newMp))
}
# Setting up the correlation. Deciding what correlation value we want (cl) and the dataset (df)
correl <- function(cl, df) {
df[abs(df) < cl] <- NA
df[df == 1] <- NA
df <- df[rowSums(!is.na(df)) > 0, colSums(!is.na(df)) > 0]
return(df)
}
# Africa
{
af <- contDf(unDf, mpDf, africa)
afUn <- af$newUn
afMp <- af$newMp
afCor = cor(afUn, afMp, method = "spearman")
}
# Asia
{
as <- contDf(unDf, mpDf, asia)
asUn <- as$newUn
asMp <- as$newMp
asCor = cor(asUn, asMp, method = "spearman")
}
# Europe
{
eu <- contDf(unDf, mpDf, europe)
euUn <- eu$newUn
euMp <- eu$newMp
euCor = cor(euUn, euMp, method = "spearman")
}
# North America
{
us <- contDf(unDf, mpDf, north_america)
usUn <- us$newUn
usMp <- us$newMp
usCor = cor(usUn, usMp, method = "spearman")
}
# South America
{
sa <- contDf(unDf, mpDf, south_america)
saUn <- sa$newUn
saMp <- sa$newMp
saCor = cor(saUn, saMp, method = "spearman")
}
saCor <- correl(0.7, saCor)
usCor <- correl(0.7, usCor)
euCor <- correl(0.7, euCor)
asCor <- correl(0.7, asCor)
afCor <- correl(0.7, afCor)
View(saCor)
View(usCor)
View(euCor)
View(asCor)
View(afCor)
}
# Author: Eirik
# Script for checking the correlation between data
# Testing different data
{
#setwd(file.path("VIS3000","data"))
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
source("../CleaningTwoSets.R")
source("../ContinentVector.R")
un <- read.csv("industry_value_added.csv", row.names = 1)
mp <- read.csv("Figure.S6a_2018.csv", row.names = 1)
data <- eqClean(mp, un)
unDf <- data$unDf
mpDf <- data$mpDf
# Seperating countries by continent in seperate df
continent <- function(df1, df2, place) {
unCols <- colnames(df1)[colnames(df1) %in% place]
df1 <- df1[, unCols, drop = FALSE]
mpCols <- colnames(df2)[colnames(df2) %in% place]
df2 <- df2[, mpCols, drop = FALSE]
return(list(df1 = df1, df2 = df2))
}
# Making a df based on continent queried. Has some print statements
# in case the rows differs (it says ncol, but we're reversing the order later on)
contDf <- function(unDf, mpDf, place) {
temp <- continent(unDf, mpDf, place)
newUn <- temp$df1
newMp <- temp$df2
print(ncol(newUn))
print(ncol(newMp))
newUn <- as.data.frame(t(newUn))
newMp <- as.data.frame(t(newMp))
return(list(newUn = newUn, newMp = newMp))
}
# Setting up the correlation. Deciding what correlation value we want (cl) and the dataset (df)
correl <- function(cl, df) {
df[abs(df) < cl] <- NA
df[df == 1] <- NA
df <- df[rowSums(!is.na(df)) > 0, colSums(!is.na(df)) > 0]
return(df)
}
# Africa
{
af <- contDf(unDf, mpDf, africa)
afUn <- af$newUn
afMp <- af$newMp
afCor = cor(afUn, afMp, method = "spearman")
}
# Asia
{
as <- contDf(unDf, mpDf, asia)
asUn <- as$newUn
asMp <- as$newMp
asCor = cor(asUn, asMp, method = "spearman")
}
# Europe
{
eu <- contDf(unDf, mpDf, europe)
euUn <- eu$newUn
euMp <- eu$newMp
euCor = cor(euUn, euMp, method = "spearman")
}
# North America
{
us <- contDf(unDf, mpDf, north_america)
usUn <- us$newUn
usMp <- us$newMp
usCor = cor(usUn, usMp, method = "spearman")
}
# South America
{
sa <- contDf(unDf, mpDf, south_america)
saUn <- sa$newUn
saMp <- sa$newMp
saCor = cor(saUn, saMp, method = "spearman")
}
saCor <- correl(0.1, saCor)
usCor <- correl(0.1, usCor)
euCor <- correl(0.1, euCor)
asCor <- correl(0.1, asCor)
afCor <- correl(0.1, afCor)
View(saCor)
View(usCor)
View(euCor)
View(asCor)
View(afCor)
}
# Author: Eirik
# Script for merging mainframe and the new frames
# setwd("data")
un <- read.csv("un_clean_2018.csv")
mp <- read.csv("Figure.S6a_2018.csv")
commonCol <- intersect(colnames(un), colnames(mp))
un <- un %>% select(all_of(commonCol))
mp <- mp %>% select(all_of(commonCol))
unDf <- as.data.frame(un)
mpDf <- as.data.frame(mp)
unDf <- na.omit(un)
mpDf <- na.omit(mp)
newDs <- bind_rows(unDf, mpDf)
# Author: Eirik
# Script for merging mainframe and the new frames
# setwd("data")
un <- read.csv("un_clean_2018.csv")
mp <- read.csv("Figure.S6a_2018.csv")
commonCol <- intersect(colnames(un), colnames(mp))
un <- un %>% select(all_of(commonCol))
mp <- mp %>% select(all_of(commonCol))
unDf <- as.data.frame(un)
mpDf <- as.data.frame(mp)
unDf <- na.omit(un)
mpDf <- na.omit(mp)
newDs <- bind_rows(unDf, mpDf)
# Author: Eirik
# Script for merging mainframe and the new frames
# setwd("data")
un <- read.csv("un_clean_2018.csv")
mp <- read.csv("Figure.S6a_2018.csv")
commonCol <- intersect(colnames(un), colnames(mp))
un <- un %>% select(all_of(commonCol))
mp <- mp %>% select(all_of(commonCol))
unDf <- as.data.frame(un)
mpDf <- as.data.frame(mp)
for (i in seq_along(unDf)) {
unDf <- unDf[!is.na(as.numeric(unDf[i, ]))]
}
for (i in seq_along(mpDf)) {
mpDf <- mpDf[!is.na(as.numeric(mpDf[i, ]))]
}
newDs <- bind_rows(unDf, mpDf)
View(newDs)
# Author: Eirik
# Script for merging mainframe and the new frames
# setwd("data")
un <- read.csv("un_clean_2018.csv")
mp <- read.csv("Figure.S6a_2018.csv")
commonCol <- intersect(colnames(un), colnames(mp))
un <- un %>% select(all_of(commonCol))
mp <- mp %>% select(all_of(commonCol))
unDf <- as.data.frame(un)
mpDf <- as.data.frame(mp)
for (i in seq_along(unDf)) {
unDf <- unDf[!is.na(as.numeric(unDf[i, ]))]
}
warnings()
# Author: Eirik
# Script for merging mainframe and the new frames
# setwd("data")
un <- read.csv("un_clean_2018.csv")
mp <- read.csv("Figure.S6a_2018.csv")
commonCol <- intersect(colnames(un), colnames(mp))
un <- un %>% select(all_of(commonCol))
mp <- mp %>% select(all_of(commonCol))
unDf <- as.data.frame(un)
mpDf <- as.data.frame(mp)
for (i in seq_along(unDf)) {
unDf <- unDf[!is.na(as.numeric(unDf[i, ]))]
}
for (i in seq_along(mpDf)) {
mpDf <- mpDf[!is.na(as.numeric(mpDf[i, ]))]
}
unDf <- na.omit(unDf)
mpDf <- na.omit(mpDf)
newDs <- bind_rows(unDf, mpDf)
View(newDs)
# Author: Eirik
# Script for checking the correlation between data
# Testing different data
{
#setwd(file.path("VIS3000","data"))
library(ggplot2)
library(reshape2)
library(dplyr)
library(tidyr)
source("../CleaningTwoSets.R")
source("../ContinentVector.R")
un <- read.csv("industry_value_added.csv", row.names = 1)
mp <- read.csv("Figure.S6a_2018.csv", row.names = 1)
data <- eqClean(mp, un)
unDf <- data$unDf
mpDf <- data$mpDf
# Seperating countries by continent in seperate df
continent <- function(df1, df2, place) {
unCols <- colnames(df1)[colnames(df1) %in% place]
df1 <- df1[, unCols, drop = FALSE]
mpCols <- colnames(df2)[colnames(df2) %in% place]
df2 <- df2[, mpCols, drop = FALSE]
return(list(df1 = df1, df2 = df2))
}
# Making a df based on continent queried. Has some print statements
# in case the rows differs (it says ncol, but we're reversing the order later on)
contDf <- function(unDf, mpDf, place) {
temp <- continent(unDf, mpDf, place)
newUn <- temp$df1
newMp <- temp$df2
print(ncol(newUn))
print(ncol(newMp))
newUn <- as.data.frame(t(newUn))
newMp <- as.data.frame(t(newMp))
return(list(newUn = newUn, newMp = newMp))
}
# Setting up the correlation. Deciding what correlation value we want (cl) and the dataset (df)
correl <- function(cl, df) {
df[abs(df) < cl] <- NA
df[df == 1] <- NA
df <- df[rowSums(!is.na(df)) > 0, colSums(!is.na(df)) > 0]
return(df)
}
# Africa
{
af <- contDf(unDf, mpDf, africa)
afUn <- af$newUn
afMp <- af$newMp
afCor = cor(afUn, afMp, method = "spearman")
}
# Asia
{
as <- contDf(unDf, mpDf, asia)
asUn <- as$newUn
asMp <- as$newMp
asCor = cor(asUn, asMp, method = "spearman")
}
# Europe
{
eu <- contDf(unDf, mpDf, europe)
euUn <- eu$newUn
euMp <- eu$newMp
euCor = cor(euUn, euMp, method = "spearman")
}
# North America
{
us <- contDf(unDf, mpDf, north_america)
usUn <- us$newUn
usMp <- us$newMp
usCor = cor(usUn, usMp, method = "spearman")
}
# South America
{
sa <- contDf(unDf, mpDf, south_america)
saUn <- sa$newUn
saMp <- sa$newMp
saCor = cor(saUn, saMp, method = "spearman")
}
saCor <- correl(0.1, saCor)
usCor <- correl(0.1, usCor)
euCor <- correl(0.1, euCor)
asCor <- correl(0.1, asCor)
afCor <- correl(0.1, afCor)
View(saCor)
View(usCor)
View(euCor)
View(asCor)
View(afCor)
}
